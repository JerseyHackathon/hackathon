// import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";
//
// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });
//
// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });
//
// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };
//
// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <html lang="en">
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
//       >
//         {children}
//       </body>
//     </html>
//   );
// }
"use client";
import React from "react";
import Navbar from "./components/Navbar";
import Footer from "./components/footer";
import "./globals.css";
import { motion, AnimatePresence } from "framer-motion";
import { usePathname } from "next/navigation";

type RootLayoutProps = {
  children: React.ReactNode;
};

export default function RootLayout({ children }: RootLayoutProps) {
  const pathname = usePathname(); 
  return (
    <html lang="en">
      <body className="flex flex-col min-h-screen overflow-x-hidden">
        {/* Ensure no horizontal scroll due to animation */}
        <Navbar />
        <AnimatePresence mode="wait">
          <motion.main
            key={pathname} // Triggers animation on route change
            initial={{ rotateY: 90, opacity: 0 }} // Start flipped
            animate={{ rotateY: 0, opacity: 1 }} // Flip to the front
            exit={{ rotateY: -90, opacity: 0 }} // Flip out to the back
            transition={{ duration: 1, ease: "easeInOut" }}
            className="flex-grow"
          >
            {children}
          </motion.main>
        </AnimatePresence>
        <Footer />
      </body>
    </html>
  );
}